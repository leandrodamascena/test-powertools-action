name: Release

env:
  RELEASE_COMMIT: ${{ github.sha }}
  RELEASE_TAG_VERSION: ${{ inputs.version_to_publish }}

on:
  workflow_dispatch:
    inputs:
      version_to_publish:
        description: "Version to be released in PyPi, Docs, and Lambda Layer, e.g. v2.0.0, v2.0.0a0 (pre-release)"
        default: v2.0.0
        required: true
      skip_pypi:
        description: "Skip publishing to PyPi as it can't publish more than once. Useful for semi-failed releases"
        default: false
        type: boolean
        required: false
      skip_code_quality:
        description: "Skip tests, linting, and baseline. Only use if release fail for reasons beyond our control and you need a quick release."
        default: false
        type: boolean
        required: false
      pre_release:
        description: "Publishes documentation using a pre-release tag (v2.0.0a0). You are still responsible for passing a pre-release version tag to the workflow."
        default: false
        type: boolean
        required: false

permissions:
  contents: read

jobs:
  build-layer:
    permissions:
      contents: read
      id-token: write
      pages: none
      pull-requests: none
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        #python-version: ["3.8","3.9","3.10","3.11","3.12"]
        python-version: ["3.8"]
    env:
      PYTHON: "${{ matrix.python-version }}"
    defaults:
      run:
        working-directory: ./layer
    steps:
      - name: checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
        with:
          ref: ${{ env.RELEASE_COMMIT }}

      - name: Install poetry
        run: pipx install git+https://github.com/python-poetry/poetry@68b88e5390720a3dd84f02940ec5200bfce39ac6 # v1.5.0
      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: "18.20.4"
      - name: Setup python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Resolve and install project dependencies
        # CDK spawns system python when compiling stack
        # therefore it ignores both activated virtual env and cached interpreter by GH
        run: |
          poetry export --format requirements.txt --output requirements.txt
          pip install --require-hashes -r requirements.txt

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v2.0.0
        with:
          platforms: arm64
        # NOTE: we need QEMU to build Layer against a different architecture (e.g., ARM)

      - name: Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@aa33708b10e362ff993539393ff100fa93ed6a27 # v3.5.0
        with:
          install: true
          driver: docker
          platforms: linux/amd64,linux/arm64

      - name: Install CDK
        working-directory: ./
        run: |
          npm ci
          npx cdk --version

      - name: CDK build
        id: cdkbuild
        run: | 
          npx cdk synth --verbose --context version="3.0.0" --context pythonVersion="python${{ matrix.python-version }}" -o cdk.out

      - name: zip output
        run: zip -r cdk.py${{ matrix.python-version }}.out.zip cdk.out
          
      - name: Archive CDK artifacts
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: cdk-layer-artifact-py${{ matrix.python-version }}
          path: layer/cdk.py${{ matrix.python-version }}.out.zip
    

  beta:
    needs: build-layer
    # lower privilege propagated from parent workflow (release.yml)
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/reusable_deploy_v2_layer_stack.yml
    secrets: inherit
    with:
      stage: "BETA"
      artefact-name: "cdk-layer-artefact"
      environment: "layer-beta"
      latest_published_version: ${{ inputs.latest_published_version }}
      source_code_artifact_name: ${{ inputs.source_code_artifact_name }}
      source_code_integrity_hash: ${{ inputs.source_code_integrity_hash }}

  #sar-beta:
  #  needs: beta  # canaries run on Layer Beta env
  #  permissions:
  #    # lower privilege propagated from parent workflow (release.yml)
  #    id-token: write
  #    contents: read
  #    pull-requests: none
  #    pages: none
  #  uses: ./.github/workflows/reusable_deploy_v2_sar.yml
  #  secrets: inherit
  #  with:
  #    stage: "BETA"
  #    artefact-name: "cdk-layer-artefact"
  #    environment: "layer-beta"
  #    package-version: ${{ inputs.latest_published_version }}
  ##    source_code_artifact_name: ${{ inputs.source_code_artifact_name }}
  ##   source_code_integrity_hash: ${{ inputs.source_code_integrity_hash }}
